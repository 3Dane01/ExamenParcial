@page "/librosEditar/{Autor}"
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage
<PageTitle>Libros</PageTitle>

<h1>Ingreso de libros </h1>

<EditForm Model="@libros" OnValidSubmit="@Guardar">

    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        <label for="Titulo">Titulo: </label>
        <InputText id="Titulo" @bind-Value="libros.Titulo" class="form-control" />
        <ValidationMessage For="() => libros.Titulo" />
    </div>
    <div>
        <label for="Autor">Autor: </label>
        <InputText id="Autor" @bind-Value="libros.Autor" class="form-control" />
        <ValidationMessage For="() => libros.Autor" />
    </div>
    <div>
        <label for="Genero">Genero: </label>
        <InputText id="Genero" @bind-Value="libros.Genero" class="form-control" />
        <ValidationMessage For="() => libros.Genero" />
    </div>
    <div>
        <label for="AñoPublicacion">Año de Publicacion: </label>
        <InputText id="AñoPublicacion" @bind-Value="libros.AñoPublicacion" class="form-control" />
        <ValidationMessage For="() => libros.AñoPublicacion" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-danger">Guardar</button>
    </div>
</EditForm>

@code {
    ClaseLibro libros = new ClaseLibro();
    List<ClaseLibro> listaLibros = new List<ClaseLibro>();
    [Parameter]
    public string Autor { get; set; }
    protected async Task Guardar()
    {
        await localStorage.SetItemAsync("listaLibros", listaLibros);
        NavigationManager.NavigateTo("/Libros");
    }
    protected override async Task OnInitializedAsync()
    {
        listaLibros = await localStorage.GetItemAsync<List<ClaseLibro>>("listaLibro");

        if (listaLibros == null)
        {
            listaLibros =  new List<ClaseLibro>();
        }
        libros = listaLibros.FirstOrDefault(c => c.Autor == Autor);
    }
}

