@page "/ElectronicosEditar"
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage
<PageTitle>Revistas</PageTitle>

<h1>Ingreso de libros electronicos </h1>


<EditForm Model="@librosElec" OnValidSubmit="@Guardar">

    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        <label for="Titulo">Titulo: </label>
        <InputText id="Titulo" @bind-Value="librosElec.Titulo" class="form-control" />
        <ValidationMessage For="() => librosElec.Titulo" />
    </div>
    <div>
        <label for="Autor">Autor: </label>
        <InputText id="Autor" @bind-Value="librosElec.Autor" class="form-control" />
        <ValidationMessage For="() => librosElec.Autor" />
    </div>
    <div>
        <label for="Genero">Genero: </label>
        <InputText id="Genero" @bind-Value="librosElec.Genero" class="form-control" />
        <ValidationMessage For="() => librosElec.Genero" />
    </div>
    <div>
        <label for="AñoPublicacion">Año de Publicacion: </label>
        <InputText id="AñoPublicacion" @bind-Value="librosElec.AñoPublicacion" class="form-control" />
        <ValidationMessage For="() => librosElec.AñoPublicacion" />
    </div>

    
    <div class="form-group">
        <label for="Formato">Formato</label>
        <select class="form-control" @bind="@librosElec.Formato">
            <option value=" "></option>
            <option value="pdf">PDF</option>
            <option value="EPUB">EPUB</option>
            <option value="MOBI">MOBI</option>
            <option value="Otro">Otro</option>
        </select>
    </div>

    <div>
        <label for="Tamaño">Tamaño de Archivo: </label>
        <InputText id="Tamaño" @bind-Value="librosElec.Tamaño" class="form-control" />
        <ValidationMessage For="() => librosElec.Tamaño" />
    </div>


   
    <div class="form-group">
        <button type="submit" class="btn btn-danger">Guardar</button>
    </div>
</EditForm>


@code {
    ClaseLibrosElectronicos librosElec = new ClaseLibrosElectronicos();
    List<ClaseLibrosElectronicos> listaLibrosElec = new List<ClaseLibrosElectronicos>();
    
    protected async Task Guardar()
    {
        
        listaLibrosElec.Add(librosElec);
        librosElec = new ClaseLibrosElectronicos();

        await localStorage.SetItemAsync("listaLibrosElec", listaLibrosElec);
    }
    protected override async Task OnInitializedAsync()
    {
        listaLibrosElec = await localStorage.GetItemAsync<List<ClaseLibrosElectronicos>>("listaLibrosElec");

        if (listaLibrosElec == null)
        {
            listaLibrosElec=  new List<ClaseLibrosElectronicos>();
        }

    }
}

