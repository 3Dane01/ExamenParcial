@page "/Revistas"
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage
<PageTitle>Revistas</PageTitle>

<h1>Ingreso de Revistas</h1>


<EditForm Model="@revistas" OnValidSubmit="@Guardar">

    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        <label for="Titulo">Titulo: </label>
        <InputText id="Titulo" @bind-Value="revistas.Titulo" class="form-control" />
        <ValidationMessage For="() => revistas.Titulo" />
    </div>
    <div>
        <label for="Autor">Autor: </label>
        <InputText id="Autor" @bind-Value="revistas.Autor" class="form-control" />
        <ValidationMessage For="() => revistas.Autor" />
    </div>
    <div>
        <label for="Genero">Genero: </label>
        <InputText id="Genero" @bind-Value="revistas.Genero" class="form-control" />
        <ValidationMessage For="() => revistas.Genero" />
    </div>
    <div>
        <label for="AñoPublicacion">Año de Publicacion: </label>
        <InputText id="AñoPublicacion" @bind-Value="revistas.AñoPublicacion" class="form-control" />
        <ValidationMessage For="() => revistas.AñoPublicacion" />
    </div>
    <div>
        <label for="Volumen">Volumen: </label>
        <InputText id="Volumen" @bind-Value="revistas.Volumen" class="form-control" />
        <ValidationMessage For="() => revistas.Volumen" />
    </div>
    <div>
        <label for="NumeroEjemplar">Numero de Ejemplar: </label>
        <InputText id="NumeroEjemplar" @bind-Value="revistas.NumeroEjemplar" class="form-control" />
        <ValidationMessage For="() => revistas.NumeroEjemplar" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-danger">Guardar</button>
    </div>
</EditForm>


@if (listaRevistas != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Titulo</th>
                <th>Autor</th>
                <th>Genero</th>
                <th>Año de publicacion</th>
                <th>Volumen</th>
                <th>Numero de ejemplar</th>
                <th>Editar</th>
                <th>Borrar</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var Revistas in listaRevistas)
            {
                <tr>
                    <td>@Revistas.Titulo</td>
                    <td>@Revistas.Autor</td>
                    <td>@Revistas.Genero</td>
                    <td>@Revistas.AñoPublicacion</td>
                    <td>@Revistas.Volumen</td>
                    <td>@Revistas.NumeroEjemplar</td>
                    <td><button class="btn btn-warning" @onclick="@(() => NavigationManager.NavigateTo($"/RevistasEditar/{Revistas.Autor}"))">editar</button></td>
                    <td><button class="btn btn-danger" @onclick="@(() => Borrar(Revistas.Autor))">Borrar</button></td>

                </tr>
            }
        </tbody>
    </table>
}
@code {
    ClaseRevistas revistas = new ClaseRevistas();
    List<ClaseRevistas> listaRevistas = new List<ClaseRevistas>();
    protected async Task Guardar()
    {
        listaRevistas.Add(revistas);
        revistas = new ClaseRevistas();

        await localStorage.SetItemAsync("listaRevistas", listaRevistas);
    }
    protected override async Task OnInitializedAsync()
    {
        listaRevistas = await localStorage.GetItemAsync<List<ClaseRevistas>>("listaRevistas");

        if (listaRevistas == null)
        {
            listaRevistas = new List<ClaseRevistas>();
        }

    }

    protected async Task Borrar(string nombre)
    {
        listaRevistas.Remove(listaRevistas.First(c => c.Autor == nombre));
        await localStorage.SetItemAsync("listaRevistas", listaRevistas);
    }
}

